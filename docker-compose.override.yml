# docker-compose.override.yml
# Development specific overrides

services:
  db:
    # 開發環境通常不需要覆蓋 db，但可以修改 port 映射或密碼 (如果需要)
    ports:
      - "5432:5432" # 確保開發時能從本機連接

  backend-python:
    build:
      context: ./backend-python
      dockerfile: .devcontainer/Dockerfile
    command: sleep infinity
    # flask run --host=0.0.0.0 --port=8000 --debug # 使用 Flask 開發伺服器並啟用除錯模式
    volumes:
      - .:/workspace:cached
        # 將專案根目錄掛載到容器的 /workspace 目錄 (假設 Dockerfile 中的 WORKDIR 是 /workspace)
        # 這樣修改本地程式碼會直接反映到容器內，Flask debug 模式會自動重載
      # - ./backend-python:/app
      # - app-logs:/app/logs # <<<--- 掛載 named volume 到容器內的 logs 目錄
    environment:
      - FLASK_ENV=development # 設定為開發模式
      # - FLASK_APP=src.web.app:app
      - PYTHONPATH=/workspace
      # 例如，如果需要更詳細的 SQL 日誌:
      # - SQLALCHEMY_ECHO=True
    ports:
      - "8001:8000" # 保留 port 映射，方便從瀏覽器訪問
      # 如果你需要用 debugpy 等工具進行遠程除錯，可以再增加端口映射
      # - "5678:5678"
      # restart: 'no' # 開發時可能不需要自動重啟
  migrate:
    build:
      context: ./backend-python
      dockerfile: .devcontainer/Dockerfile
    volumes:
      # <--- 關鍵：確保 migrate 服務也能看到最新的程式碼
      # - ./backend-python:/app
      # --- 為了 Git 和路徑一致性，也掛載整個專案 ---
      - .:/workspace:cached
    
    # ---命令需要在 /workspace/backend-python 下執行 ---
    command: bash -c "pip install --user -r /workspace/backend-python/requirements.txt && export PATH=\"/home/vscode/.local/bin:$PATH\" && alembic upgrade head"
  frontend:
    build:
      context: ./frontend
      dockerfile: .devcontainer/Dockerfile
    # 開發模式下保持容器運行
    command: sh -c "cd /workspace/frontend && npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - .:/workspace:cached
    ports:
      - "5251:5173"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # 解決某些開發環境的檔案監控問題
    user: vscode
  node-services:
    build:
      context: ./node-services
      dockerfile: .devcontainer/Dockerfile
    command: sleep infinity
    volumes:
      # - ./node-services:/app
      # --- 為了 Git 和路徑一致性，也掛載整個專案 ---
      - .:/workspace:cached
    ports:
      - "3000:3000"
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # 解決某些開發環境的檔案監控問題
    # 確保使用正確的用戶
    user: vscode